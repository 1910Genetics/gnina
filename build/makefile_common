SRCD :=./../../../src
OBJD :=./objs
BUILTIN_VARS := $(.VARIABLES)

OPENBABEL_INCLUDE := /usr/local/include/openbabel-2.0
BOOST_INCLUDE := $(BASE)/include/boost
CUDA_INCLUDE := $(BASE)/cuda/include
INCFLAGS := -I $(BOOST_INCLUDE) \
			-I $(OPENBABEL_INCLUDE) \
			-I $(CUDA_INCLUDE) \
			-I $(SRCD)/lib

CC := g++-5
CFLAGS += \
	   -std=c++11 \
	   -Wno-deprecated-declarations \
	   $(INCFLAGS) $(C_PLATFORM) $(C_OPTIONS)

NVCC := nvcc
NVOPTS += \
	   -std=c++11 \
	   -gencode arch=compute_52,code=sm_52 \
	   $(INCFLAGS)

LDFLAGS := -L $(BASE)/lib \
		   -L . \
		   -L /usr/local/lib \
		   -L $(BASE)/cuda/lib64 \
		   $(LDFLAGS)

LIBS := -l openbabel \
	-l boost_iostreams${BOOST_LIB_VERSION} \
	-l boost_timer${BOOST_LIB_VERSION} \
	-lz \
	-l boost_system${BOOST_LIB_VERSION} \
	-l boost_regex${BOOST_LIB_VERSION} \
	-l boost_thread${BOOST_LIB_VERSION} \
	-l boost_serialization${BOOST_LIB_VERSION} \
	-l boost_filesystem${BOOST_LIB_VERSION} \
	-l boost_program_options${BOOST_LIB_VERSION} \
	-l boost_date_time${BOOST_LIB_VERSION} \
	-lcudart

LIBSRC := $(wildcard $(SRCD)/lib/*.cpp)
MAINSRC := $(wildcard $(SRCD)/main/*.cpp)
TOGNINASRC := $(wildcard $(SRCD)/tognina/*.cpp)
FROMGNINASRC := $(wildcard $(SRCD)/fromgnina/*.cpp)
GNINAGRIDSRC := $(wildcard $(SRCD)/gninagrid/*.cpp)
SERVERSRC := $(wildcard $(SRCD)/gninaserver/*.cpp)
GPUSRC := $(wildcard $(SRCD)/lib/*.cu)

SRCS := $(LIBSRC) \
		$(MAINSRC) \
		$(TOGNINASRC) \
		$(FROMGNINASRC) \
		$(GNINAGRIDSRC) \
		$(SERVERSRC) \
		$(GUPSRC)

LIBOBJ := $(LIBSRC:$(SRCD)/%.cpp=$(OBJD)/%.o)
MAINOBJ := $(MAINSRC:$(SRCD)/%.cpp=$(OBJD)/%.o)
TOGNINAOBJ := $(TOGNINASRC:$(SRCD)/%.cpp=$(OBJD)/%.o)
FROMGNINAOBJ := $(FROMGNINASRC:$(SRCD)/%.cpp=$(OBJD)/%.o)
GNINAGRIDOBJ := $(GNINAGRIDSRC:$(SRCD)/%.cpp=$(OBJD)/%.o)
SERVEROBJ := $(SERVERSRC:$(SRCD)/%.cpp=$(OBJD)/%.o)
GPUOBJ := $(GPUSRC:$(SRCD)/%.cu=$(OBJD)/%.o)

OBJS := $(LIBOBJ)  \
		$(MAINOBJ) \
		$(TOGNINAOBJ) \
		$(FROMGNINAOBJ) \
		$(GNINAGRIDOBJ) \
		$(SERVEROBJ) \
		$(GPUOBJ)

$(OBJS): $(MAKEFILE_LIST)

$(OBJD)/%.o: $(SRCD)/%.cpp
	mkdir -p $(dir $(OBJD)/$*)
	$(CC) $(INCFLAGS) -MM -MP -MT $(OBJD)/$*.o -MF $(OBJD)/$*.d $<
	$(CC) $(CFLAGS) -o $@ -c $<

$(OBJD)/%.o: $(SRCD)/%.cu
	mkdir -p $(dir $(OBJD)/$*)
	$(NVCC) $(INCFLAGS) -M -odir $(OBJD) -o $(OBJD)/$*.d $<
	$(NVCC) $(NVOPTS) -o $@ -dc $<

tags: $(SRCS) Makefile
	cd $(SRCD)
	ctags -R

-include $(OBJS:.o=.d)

all: gnina.gpu gnina tognina gninaserver libgnina.a gninagrid

device_code.o: $(GPUOBJ)
	$(NVCC) $(NVOPTS) -o $@ -dlink $^

gnina.gpu: $(MAINOBJ) $(LIBOBJ) $(GPUOBJ) device_code.o
	+ $(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

gnina: $(MAINOBJ) $(LIBOBJ)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)
	@echo "Done"

tognina: $(TOGNINAOBJ) $(LIBOBJ)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)
	@echo "Done"

fromgnina: $(FROMGNINAOBJ) $(LIBOBJ)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)
	@echo "Done"	

gninagrid: $(GNINAGRIDOBJ) $(LIBOBJ)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)
	@echo "Done"    	

gninaserver: $(SERVEROBJ) $(LIBOBJ)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)
	@echo "Done"	

libgnina.a: $(LIBOBJ)
	 ar rcs libgnina.a $^

clean:
	rm -rf *.o *.d objs

define \n


endef
info::
	$(foreach v, \
		$(filter-out $(BUILTIN_VARS) BUILTIN_VARS \n, $(.VARIABLES)), \
		$(info $(v) = $($(v)) ${\n}))
